name: Update Feeds

on:
  schedule:
    - cron: '0 0 * * *'  # Run once a day to start the 24-hour loop
  workflow_dispatch:  # Allows manual triggering

jobs:
  update-feeds-and-upload:
    runs-on: self-hosted-primary
    timeout-minutes: 1440

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Start 24-hour loop
        env:  # Pass the secret as an environment variable
          ANIMESCHEDULE_TOKEN: ${{secrets.ANIMESCHEDULE_TOKEN}}
        run: |
          end_time=$(( $(date +%s) + 84600 )) # 23 hours * 3600 + 30 minutes * 60
          while [ $(date +%s) -lt $end_time ]; do
            echo "Checking for newly released episodes"
          
            # Pull latest changes
            git pull
          
            # Run the feed update script
            node index.js update-all-feeds
          
            # Stage, commit, and push any JSON changes
            git config --local user.email "action@github.com"
            git config --local user.name "GitHub Action"
            git add './*.json'
          
            title="Added New Episode(s)"
            if [ -f changes.txt ]; then
            contains_dub=$(grep -q "(Dub)" changes.txt && echo true || echo false)
            contains_sub=$(grep -q "(Sub)" changes.txt && echo true || echo false)
            contains_hentai=$(grep -q "(Hentai)" changes.txt && echo true || echo false)
            contains_added=$(grep -q "Added" changes.txt && echo true || echo false)
            contains_removed=$(grep -q "Removed" changes.txt && echo true || echo false)
            contains_delayed=$(grep -q "Delayed" changes.txt && echo true || grep -q "delayed" changes.txt && echo true || echo false)
            contains_missing=$(grep -q "Missing" changes.txt && echo true || echo false)
            contains_modified=$(grep -q "Modified" changes.txt && echo true || echo false)

            if [ "$contains_added" == "true" ] && [ "$contains_removed" == "true" ]; then
              if [ "contains_missing" == "true" ]; then
              title="(Added/Removed) Missing Episode(s)"
              else
              title="(Added/Removed) Episode(s)"
              fi
            elif [ "$contains_removed" == "true" ] && [ "$contains_delayed" == "true" ]; then
            title="Removed Episode(s) (Delayed)"
            elif [ "$contains_removed" == "true" ]; then
            title="Removed Episode(s) (Correction)"
            elif [ "$contains_missing" == "true" ]; then
            title="Added Missing Episode(s)"
            elif [ "contains_modified" == "true" ]; then
            title="Modified Episode(s)"
            fi
          
            if [ "$contains_dub" == "true" ] && [ "$contains_sub" == "true" ] && [ "$contains_hentai" == "true" ]; then
            title="(Dub/Sub/Hentai) $title"
            elif [ "$contains_dub" == "true" ] && [ "$contains_sub" == "true" ]; then
            title="(Dub/Sub) $title"
            elif [ "$contains_dub" == "true" ] && [ "$contains_hentai" == "true" ]; then
            title="(Dub/Hentai) $title"
            elif [ "$contains_sub" == "true" ] && [ "$contains_hentai" == "true" ]; then
            title="(Sub/Hentai) $title"
            elif [ "$contains_dub" == "true" ]; then
            title="(Dub) $title"
            elif [ "$contains_sub" == "true" ]; then
            title="(Sub) $title"
            elif [ "$contains_hentai" == "true" ]; then
            title="(Hentai) $title"
            fi
          
            git commit -m "$title" -m "$(cat changes.txt)" || true
            else
            git commit -m "$title" || true
            fi
          
            git push || true
          
            echo "Sleeping for 30 seconds..."
            sleep 30
          done
        shell: bash